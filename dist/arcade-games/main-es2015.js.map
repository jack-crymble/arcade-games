{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/common/common.data.ts","./src/app/common/services/direction.service.ts","./src/app/common/services/game.service.ts","./src/app/common/services/highscore.service.ts","./src/app/gameover-dialog/gameover-dialog.component.ts","./src/app/gameover-dialog/gameover-dialog.component.html","./src/app/home/home.component.ts","./src/app/home/home.component.html","./src/app/snake/snake.component.ts","./src/app/snake/snake.component.html","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main-es2015.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { HomeComponent } from './home/home.component';\nimport { SnakeComponent } from './snake/snake.component';\n\n\nconst routes: Routes = [\n  { path: 'snake', component: SnakeComponent },\n  { path: 'home', component: HomeComponent },\n  { path: '**', component: HomeComponent },\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component } from '@angular/core';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {}\n","<router-outlet></router-outlet>\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { SnakeComponent } from './snake/snake.component';\nimport { HomeComponent } from './home/home.component';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { MatButtonModule } from '@angular/material/button';\nimport { GameoverDialogComponent } from './gameover-dialog/gameover-dialog.component';\nimport { MatDialogModule } from '@angular/material/dialog';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    SnakeComponent,\n    HomeComponent,\n    GameoverDialogComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    BrowserAnimationsModule,\n    MatButtonModule,\n    MatDialogModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","export enum SquareType {\n  EMPTY = 'empty',\n  HEAD = 'head',\n  BODY = 'body',\n  TAIL = 'tail',\n  FOOD = 'food'\n};\n\nexport enum Game {\n  SNAKE = 'snake'\n};\n\nexport enum Direction {\n  NORTH = 'north',\n  EAST = 'east',\n  SOUTH = 'south',\n  WEST = 'west'\n};\n\nexport interface Square {\n  type: SquareType;\n};\n\nexport interface Position {\n  x: number;\n  y: number;\n};\n\nexport interface Highscore {\n  score: number;\n};\n","import { Injectable } from '@angular/core';\nimport { fromEvent, Subscription } from 'rxjs';\nimport { filter, tap } from 'rxjs/operators';\nimport { Direction } from '../common.data';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class DirectionService {\n\n  private VALID_KEY_CODES = ['ArrowUp', 'ArrowRight', 'ArrowDown', 'ArrowLeft'];\n  private _direction: Direction;\n  private _pendingDirection: Direction;\n  private keyDownSubscription: Subscription;\n\n  get currentDirection(): Direction {\n    return this._direction;\n  }\n\n  keyDown$ = fromEvent(document, 'keydown').pipe(\n    filter((event: KeyboardEvent) => this.VALID_KEY_CODES.indexOf(event.code) > -1),\n    tap(event => {\n      if (event.code === 'ArrowUp' && (this._direction === Direction.EAST || this._direction === Direction.WEST)) {\n        this._pendingDirection = Direction.NORTH;\n      } else if (event.code === 'ArrowRight' && (this._direction === Direction.NORTH || this._direction === Direction.SOUTH)) {\n        this._pendingDirection = Direction.EAST;\n      } else if (event.code === 'ArrowDown' && (this._direction === Direction.EAST || this._direction === Direction.WEST)) {\n        this._pendingDirection = Direction.SOUTH;\n      } else if (event.code === 'ArrowLeft' && (this._direction === Direction.NORTH || this._direction === Direction.SOUTH)) {\n        this._pendingDirection = Direction.WEST;\n      }\n    })\n  );\n\n  init(): void {\n    this.resetDirection();\n    this.keyDownSubscription = this.keyDown$.subscribe();\n  }\n\n  update(): void {\n    this._direction = this._pendingDirection;\n  }\n\n  resetDirection(): void {\n    this._direction = this._pendingDirection = Direction.EAST;\n  }\n\n  destroy(): void {\n    this.keyDownSubscription?.unsubscribe();\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { Square, SquareType } from '../common.data';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class GameService {\n\n  generateSquareBoard(width: number): Square[][] {\n    let board = [...Array(width)].map(() => Array(width).fill({type: SquareType.EMPTY}));\n    board = JSON.parse(JSON.stringify(board));\n    return board;\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { Game, Highscore } from '../common.data';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class HighscoreService {\n\n  save(game: Game, score: number): void {\n    let highscores: Highscore[] = this.getHighscores(game);\n    highscores.push({score: score});\n    localStorage.setItem(this.buildID(game), JSON.stringify(highscores));\n  }\n\n  getHighscores(game: Game): Highscore[] {\n    const highscores: Highscore[] = JSON.parse(localStorage.getItem(this.buildID(game))) || []\n    return highscores.sort((a, b) => b.score - a.score).slice(0, 5);\n  }\n\n  private buildID(game: Game): string {\n    return `${game}_v1`\n  }\n}\n","import { Component, Inject } from \"@angular/core\";\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { Game, Highscore } from \"../common/common.data\";\nimport { HighscoreService } from \"../common/services/highscore.service\";\n\n@Component({\n  selector: 'app-gameover-dialog',\n  templateUrl: 'gameover-dialog.component.html',\n  styleUrls: ['./gameover-dialog.component.scss']\n})\nexport class GameoverDialogComponent {\n\n  highscores: Highscore[] = [];\n\n  constructor(\n    public dialogRef: MatDialogRef<GameoverDialogComponent>,\n    @Inject(MAT_DIALOG_DATA) public data: {score: number, game: Game},\n    public highscoreService: HighscoreService\n  ) {\n    this.highscores = highscoreService.getHighscores(data.game);\n  }\n\n  save(): void {\n    this.highscoreService.save(this.data.game, this.data.score);\n    this.close();\n  }\n\n  close(): void {\n    this.dialogRef.close();\n  }\n}\n","<div class=\"sub-title\">\n  Your score was {{ data.score }}\n</div>\n\n<div class=\"highscores\">\n  <div class=\"title\">Previous Highscores</div>\n  <div *ngFor=\"let highscore of highscores; let i=index\" class=\"highscore\">\n    <span class=\"position\">{{i+1}}:</span>\n    <span class=\"score\">{{ highscore.score }}</span>\n  </div>\n</div>\n\n<div class=\"buttons\">\n  <button mat-raised-button cdkFocusInitial (click)=\"close()\">Close</button>\n  <button mat-raised-button color=\"primary\" (click)=\"save()\">Save score</button>\n</div>\n","import { Component } from '@angular/core';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.scss']\n})\nexport class HomeComponent {\n\n  constructor(\n    private router: Router\n  ) {}\n\n  openGame(game: string): void {\n    this.router.navigate([game]);\n  }\n\n}\n","<div class=\"title\">\n  <span>Choose a game</span>\n</div>\n\n<div class=\"games\">\n  <button mat-raised-button color=\"primary\" (click)=\"openGame('snake')\">Snake 🐍</button>\n</div>\n","import { Component, OnDestroy, OnInit } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport { fromEvent } from 'rxjs';\nimport { filter, tap } from 'rxjs/operators';\nimport { Direction, Game, Position, Square, SquareType } from '../common/common.data';\nimport { DirectionService } from '../common/services/direction.service';\nimport { GameService } from '../common/services/game.service';\nimport { GameoverDialogComponent } from '../gameover-dialog/gameover-dialog.component';\n\n@Component({\n  selector: 'app-snake',\n  templateUrl: './snake.component.html',\n  styleUrls: ['./snake.component.scss']\n})\nexport class SnakeComponent implements OnInit, OnDestroy {\n  boardSize = 11;\n  board: Square[][];\n  headPosition: Position;\n  bodyPositions: Position[] = [];\n  snakeLength = 1;\n  isPlaying: boolean;\n  isFoodOnBoard: boolean;\n  foodPosition: Position;\n\n  spaceToStart$ = fromEvent(document, 'keydown').pipe(\n    filter((event: KeyboardEvent) => event.code === 'Space'),\n    filter(() => !this.isPlaying),\n    tap(() => this.startGame())\n  );\n\n  constructor(\n    private gameService: GameService,\n    private directionService: DirectionService,\n    private dialog: MatDialog\n  ) {}\n\n  ngOnInit(): void {\n    this.board = this.gameService.generateSquareBoard(this.boardSize);\n    this.directionService.init();\n  }\n\n  ngOnDestroy(): void {\n    this.directionService.destroy();\n  }\n\n  startGame(): void {\n    this.board = this.gameService.generateSquareBoard(this.boardSize);\n    this.headPosition = {x: Math.floor(this.boardSize / 2), y: Math.floor(this.boardSize / 2) };\n    this.board[this.headPosition.x][this.headPosition.y].type = SquareType.HEAD;\n    this.snakeLength = 1;\n    this.isPlaying = true;\n    this.addFoodToBoard();\n    this.gameLoop();\n  }\n\n  endGame(): void {\n    this.isPlaying = false;\n    this.isFoodOnBoard = false;\n    this.bodyPositions = [];\n    this.directionService.resetDirection();\n    this.gameOverDialog();\n  }\n\n  gameOverDialog(): void {\n    this.dialog.open(GameoverDialogComponent, {\n      data: {\n        score: this.snakeLength - 1,\n        game: Game.SNAKE\n      }\n    });\n  }\n\n  async gameLoop(): Promise<void> {\n    while (this.isPlaying) {\n      this.directionService.update();\n      const previousHeadPosition = JSON.parse(JSON.stringify(this.headPosition));\n\n      if (this.directionService.currentDirection === Direction.NORTH) {\n        this.headPosition.x -= 1;\n      } else if (this.directionService.currentDirection === Direction.EAST) {\n        this.headPosition.y += 1;\n      } else if (this.directionService.currentDirection === Direction.SOUTH) {\n        this.headPosition.x += 1;\n      } else if (this.directionService.currentDirection === Direction.WEST) {\n        this.headPosition.y -= 1;\n      }\n\n      if (this.hasSnakeHitBoundary() || this.hasSnakeEatenSelf()) {\n        this.endGame();\n        continue;\n      }\n\n      if (this.isFoodOnBoard) {\n        if (this.headPosition.x === this.foodPosition.x && this.headPosition.y === this.foodPosition.y) {\n          this.eat();\n        }\n      }\n\n      this.updateSquare(previousHeadPosition, SquareType.EMPTY);\n      this.updateSnakeBody(previousHeadPosition);\n      this.updateSquare(this.headPosition, SquareType.HEAD);\n\n      await this.sleep(300);\n    }\n  }\n\n  private addFoodToBoard(): void {\n    if (this.isFoodOnBoard) {\n      return;\n    }\n    while (!this.isFoodOnBoard) {\n      this.foodPosition = {\n        x: Math.floor(Math.random() * this.boardSize),\n        y: Math.floor(Math.random() * this.boardSize)\n      };\n      if (this.board[this.foodPosition.x][this.foodPosition.y].type === SquareType.EMPTY) {\n        this.isFoodOnBoard = true;\n      }\n    }\n    this.updateSquare(this.foodPosition, SquareType.FOOD);\n  }\n\n  private hasSnakeHitBoundary(): boolean {\n    return this.headPosition.x < 0\n      || this.headPosition.y < 0\n      || this.headPosition.x > this.boardSize - 1\n      || this.headPosition.y > this.boardSize - 1;\n  }\n\n  private hasSnakeEatenSelf(): boolean {\n    const square = this.board[this.headPosition.x][this.headPosition.y];\n    return square.type === SquareType.BODY || square.type === SquareType.TAIL;\n  }\n\n  private eat(): void {\n    this.snakeLength += 1;\n    this.isFoodOnBoard = false;\n    this.updateSquare(this.foodPosition, SquareType.EMPTY);\n    this.bodyPositions.push({x: this.foodPosition.x, y: this.foodPosition.y});\n    this.foodPosition.x = -1;\n    this.foodPosition.y = -1;\n    this.addFoodToBoard();\n  }\n\n  private updateSnakeBody(previousHeadPosition: Position): void {\n    if (this.bodyPositions.length > 0) {\n      this.removeTail();\n      this.bodyPositions = [{x: previousHeadPosition.x, y: previousHeadPosition.y}, ...this.bodyPositions];\n\n      this.bodyPositions.forEach(bodyPart => {\n        this.board[bodyPart.x][bodyPart.y].type = SquareType.BODY;\n      });\n    }\n  }\n\n  private removeTail(): void {\n    const tail = this.bodyPositions[this.bodyPositions.length - 1];\n    this.board[tail.x][tail.y].type = SquareType.EMPTY;\n    this.bodyPositions.splice(this.snakeLength - 2, 1);\n  }\n\n  private updateSquare(position: Position, newType: SquareType): void {\n    this.board[position.x][position.y].type = newType;\n  }\n\n  private sleep(ms: number = 1000): Promise<any> {\n    return new Promise(resolve => setTimeout(resolve, ms));\n  }\n\n}\n","<ng-container *ngIf=\"spaceToStart$ | async\"></ng-container>\n\n<div class=\"title\">\n  <span>Snake!</span>\n</div>\n\n<div class=\"start\" [class.hidden]=\"isPlaying\">\n  Press space to begin...\n</div>\n\n<div class=\"score\">\n  <span>Score: {{ snakeLength - 1 }}</span>\n</div>\n\n<div class=\"board\">\n  <div *ngFor=\"let row of board; let i=index\" class=\"row\">\n    <ng-container *ngFor=\"let square of row; let j=index\">\n      <div class=\"square\" [ngClass]=\"{\n        'head': square.type === 'head',\n        'food': square.type === 'food',\n        'body': square.type === 'body',\n        'empty': square.type === 'empty'\n      }\">\n      </div>\n    </ng-container>\n  </div>\n</div>\n\n<div class=\"buttons\">\n  <button mat-raised-button color=\"primary\" (click)=\"startGame()\" [disabled]=\"isPlaying\">Play!</button>\n</div>\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":"webpack:///"}